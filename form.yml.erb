<%-
  groups = OodSupport::User.new.groups.sort_by(&:id).tap { |groups|
    groups.unshift(groups.delete(OodSupport::Process.group))
  }.map(&:name).grep(/.*[0-9]{5}/)
-%>

# Batch Connect app configuration file
#
# @note Used to define the submitted cluster, title, description, and
#   hard-coded/user-defined attributes that make up this Batch Connect app.
---

# **MUST** set cluster id here that matches cluster configuration file located
# under /etc/ood/config/clusters.d/*.yml
# @example Use the Owens cluster at Ohio Supercomputer Center
#     cluster: "owens"
cluster: "my-k8s-cluster"

form:
  - account
  - bc_num_hours
  - num_cores
  - num_mem
  - node
  - ansysver
  - ansyslic
  - ismeshing
  - is3d
  - prescision

description: Request an ANSYS Fluent Server
submit: submit.yml.erb
title: Fluent-Server


# Define attribute values that aren't meant to be modified by the user within
# the Dashboard form
attributes:
  ansysver:
    widget: select
    label: "ANSYS Version"
    required: true
    value: 2025R1
    options:
    <%- 
      # Get available modules dynamically from LMOD paths
      begin
        module_path =  "/opt/nesi/lmod/mahuika/ANSYS"
        available_modules = []
        Dir.glob("#{module_path}/*.lua").each do |file|
          # Extract module name from file path
          relative_path = file.sub("#{module_path}/", "")
          module_name = relative_path.sub(/\.lua$/, "")                
          available_modules << module_name
        end
        
        # Sort modules and create options
        available_modules.uniq.sort.each do |mod|
          # Create a friendly display name
          display_name = mod.include?('/') ? "#{mod.split('/').first}/#{mod.split('/').last}" : mod
      -%>
      - ["<%= display_name %>", "<%= mod %>"]
      <%- 
        end
      end
      -%>
  ansyslic:
    widget: select
    label: "Licence"
    required: true
    options:
    <%- 
      # Get available licences dynamically from licence path
      begin
        lic_base_path =  "/opt/nesi/share/ANSYS/Licenses"
        all_lic = []
        Dir.glob("#{lic_base_path}/*.lic").each do |lic_path|
          if Pathname.new(lic_path).readable?
            all_lic << lic_path
          end
        end
        all_lic.each do |lic_path|
          lic_name = "#{lic_path.split('/').last.split('.').first}"
          -%>
            - ["<%= lic_name %>", "<%= lic_path %>"]
          <%- 
        end
      -%>
    help:<%- 
      if all_lic.empty?
      -%>
      "**WARNING: YOU DO NOT HAVE ACCESS TO A VALID ANSYS LICENCE**\n\nContact NeSI support if you believe this is a mistake."
      <%-
      else
      -%>
      "Select which licence to use."
      <%-
      end
    end
    -%>
    display: true
  ismeshing:
    label: "Mode"
    widget: select
    required: true
    help: |
      What mode to launch in.
    options:
      - ["Solution", ""]
      - ["Meshing", "-meshing"]
  is3d:
    label: "2D/3D"
    widget: "radio_button"
    value: "3d"
    required: true
    options:
      - ["3d", "3d"]
      - ["2d", "2d"]
  prescision:
    label: "Prescision"
    widget: "radio_button"
    value: "Double"
    required: true
    options:
      - ["Double", "dp"]
      - ["Single", ""]
  node: ""
  account:
    label: "Project Code"
    widget: select
    options:
      <%- groups.each do |group| %>
      - "<%= group %>"
      <%- end %>
    required: true
  bc_num_hours:
    max: 8
    min: 1
    step: 1
    value: 1
    widget: number_field
  num_cores:
    label: Number of cores
    max: 4
    min: 1
    value: 2
    widget: number_field
  num_mem:
    label: Memory per job (GB)
    max: 32
    min: 4
    step: 1
    value: 4
    widget: number_field

# All of the attributes that make up the Dashboard form (in respective order),
# and made available to the submit configuration file and the template ERB
# files
#
# @note You typically do not need to modify this unless you want to add a new
#   configurable value
# @note If an attribute listed below is hard-coded above in the `attributes`
#   option, then it will not appear in the form page that the user sees in the
#   Dashboard
