<%
   user = OodSupport::User.new
   ood_nfs_server = Resolv.getaddress("ood-nfs-node")
   software_nfs_server = Resolv.getaddress("external-nfs")
%>
---
batch_connect:
  template: "basic"
  conn_params:
    - mwitoken
script:
  wall_time: "<%= bc_num_hours.to_i * 3600 %>"
  native:
    container:
      name: "matlab"
      image: "ghcr.io/nesi/nesi-docker-base:v0.3.0"
      command: ["/bin/bash","-l","<%= staged_root %>/job_script_content.sh"]
      restart_policy: 'OnFailure'
      env:
        TZ: "Pacific/Auckland"
        LMOD_SITE_MODULEPATH: "/opt/nesi/CS400_centos7_bdw/modules/all"
      port: "8080"
      cpu: "<%= num_cores %>"
      memory: "<%= num_mem %>Gi"
    mounts:
      - type: nfs
        name: home
        host: <%= ood_nfs_server %>
        path: /nesi/home
        destination_path: /nesi/home
      - type: nfs
        name: project
        host: <%= ood_nfs_server %>
        path: /nesi/project
        destination_path: /nesi/project
      - type: nfs
        name: nobackup
        host: <%= ood_nfs_server %>
        path: /nesi/nobackup
        destination_path: /nesi/nobackup
      - type: nfs
        name: software
        host: <%= software_nfs_server %>
        path: /mnt/data-migration
        destination_path: /opt/nesi
      - type: host
        name: nslcd-socket
        host_type: Socket
        path: /var/run/nslcd/socket
        destination_path: /var/run/nslcd/socket
      - type: host
        name: nss-socket
        host_type: Socket
        path: /var/lib/sss/pipes/nss
        destination_path: /var/lib/sss/pipes/nss
      - type: host
        name: nsswitch-conf
        host_type: File
        path: /etc/nsswitch.conf
        destination_path: /etc/nsswitch.conf
    configmap:
      files:
        - filename: 'k8_helper'
          data: |
            #!/usr/bin/env bash

            set -x

            KEY=$1
            VALUE=$(echo -n $2 | base64)
            CFG="$(hostname)-secret"

            kubectl get secret ${CFG} -o json | jq --arg key $KEY --arg value $VALUE '.data[$key] = $value'  | kubectl apply -f -
          mount_path: '/opt/open_ondemand/helpers'
